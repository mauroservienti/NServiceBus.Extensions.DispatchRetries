[assembly: System.Runtime.Versioning.TargetFramework(".NETStandard,Version=v2.0", FrameworkDisplayName="")]
namespace NServiceBus
{
    public class DispatchRetriesConfiguration
    {
        public DispatchRetriesConfiguration(NServiceBus.EndpointConfiguration configuration, Polly.AsyncPolicy defaultBatchAndImmediateDispatchRetriesPolicy) { }
        public void DefaultBatchDispatchRetriesPolicy(Polly.AsyncPolicy batchDispatchRetryPolicy) { }
        public void DefaultImmediateDispatchRetriesPolicy(Polly.AsyncPolicy immediateDispatchRetryPolicy) { }
    }
    public static class DispatchRetriesEndpointConfigurationExtensions
    {
        public static NServiceBus.DispatchRetriesConfiguration DispatchRetries(this NServiceBus.EndpointConfiguration configuration) { }
        public static NServiceBus.DispatchRetriesConfiguration DispatchRetries(this NServiceBus.EndpointConfiguration configuration, Polly.AsyncPolicy defaultBatchAndImmediateDispatchRetriesPolicy) { }
    }
    public static class MessageHandlerContextExtensions
    {
        public static void OverrideBatchDispatchRetryPolicy(this NServiceBus.IMessageHandlerContext context, Polly.AsyncPolicy batchDispatchRetryPolicy) { }
        public static void OverrideImmediateDispatchRetryPolicy(this NServiceBus.IMessageHandlerContext context, Polly.AsyncPolicy immediateDispatchRetryPolicy) { }
    }
}
namespace NServiceBus.Extensions.DispatchRetries.Behaviors
{
    public class BatchDispatchRetriesBehavior : NServiceBus.Pipeline.Behavior<NServiceBus.Pipeline.IBatchDispatchContext>
    {
        public BatchDispatchRetriesBehavior(NServiceBus.Settings.ReadOnlySettings readOnlySettings) { }
        public override System.Threading.Tasks.Task Invoke(NServiceBus.Pipeline.IBatchDispatchContext context, System.Func<System.Threading.Tasks.Task> next) { }
    }
    public class ImmediateDispatchRetriesBehavior : NServiceBus.Pipeline.Behavior<NServiceBus.Pipeline.IDispatchContext>
    {
        public ImmediateDispatchRetriesBehavior(NServiceBus.Settings.ReadOnlySettings readOnlySettings) { }
        public override System.Threading.Tasks.Task Invoke(NServiceBus.Pipeline.IDispatchContext context, System.Func<System.Threading.Tasks.Task> next) { }
    }
}
namespace NServiceBus.Extensions.DispatchRetries.Features
{
    public class DispatchRetriesFeature : NServiceBus.Features.Feature
    {
        public DispatchRetriesFeature() { }
        protected override void Setup(NServiceBus.Features.FeatureConfigurationContext context) { }
    }
}